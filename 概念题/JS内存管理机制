内存的分配与使用

栈内存与堆内存
基本类型和引用类型
JS 中的数据类型，整体上来说只有两类：基本类型和引用类型。

其中基本类型包括：Sting、Number、Boolean、null、undefined、Symbol。这类型的数据最明显的特征是大小固定、体积轻量、相对简单，它们被放在 JS 的栈内存里存储。

而排除掉基本类型，剩下的数据类型就是引用类型，比如 Object、Array、Function 等等等等。这类数据比较复杂、占用空间较大、且大小不定，它们被放在 JS 的堆内存里存储。

堆和栈分别是不同的数据结构。栈是线性表的一种，而堆则是树形结构。

let a = 0; 
let b = "Hello World" 
let c = null; 
let d = { name: '修言' }; 
let e = ['修言', '小明', 'bear']; 

在访问a，b，c 三个变量的时候， 过程非常简单： 从栈中直接获取改变量的值
而在访问 d 和 e 时， 则需要分两步走：
  1. 从栈中获取变量对应对象的引用（即它在堆内存中的地址）
  2. 拿着 1 中获取到的地址， 再去堆内存空间查询， 才能拿到我们想要的数据